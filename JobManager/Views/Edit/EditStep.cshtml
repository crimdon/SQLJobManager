
@{
    ViewBag.Title = "Edit Step";
}

@using JobManager.Models;

@model StepDetailsModel

@section LeftMenu{
    @{Html.RenderAction("_LeftMenu", "Edit", new { dbServer = ViewBag.ServerName, jobID = ViewBag.JobID });
    }
}

@using (Html.BeginForm())
{
    <fieldset>
        <div class="panel-group" id="accordion">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseGeneral">
                            General
                        </a>
                    </h4>
                </div>
                <div id="collapseGeneral" class="panel-collapse collapse in">
                    <div class="panel-body">

                        <div class="control-label col-md-2">
                            Step Name
                        </div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.StepName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.StepName, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        <div class="control-label col-md-2">
                            Run as
                        </div>
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.RunAs, (List<SelectListItem>)ViewBag.ProxyList, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.RunAs, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        <div class="control-label col-md-2">
                            Database
                        </div>
                        <div class="col-md-10 form-control-container text-left">
                            @Html.DropDownListFor(m => m.Database, (List<SelectListItem>)ViewBag.DatabaseList, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.Database, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        <div class="control-label col-md-2">
                            Command
                        </div>
                        <div class="col-md-10">
                            @Html.TextAreaFor(m => m.Command, 10, 100, htmlAttributes: new { @class = "form-control", style = "width: 100%; max-width: 100%;" })
                            @Html.ValidationMessageFor(m => m.Command, "", new { @class = "text-danger" })
              
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseAdvanced">
                            Advanced
                        </a>
                    </h4>
                </div>
                <div id="collapseAdvanced" class="panel-collapse collapse">
                    <div class="panel-body">
                        <div class="control-label col-md-2">
                            On success action:
                        </div>
                        <div class="col-md-10 form-control-container text-left">
                            @Html.DropDownListFor(m => m.OnSuccess, (List<SelectListItem>)ViewBag.ActionList, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.OnSuccess, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        <div class="control-label col-md-2">
                            On failure action:
                        </div>
                        <div class="col-md-10 form-control-container text-left">
                            @Html.DropDownListFor(m => m.OnFailure, (List<SelectListItem>)ViewBag.ActionList, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.OnFailure, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="hidden">
            @Html.HiddenFor(m => m.ServerName)
            @Html.HiddenFor(m => m.JobID)
            @Html.HiddenFor(m => m.StepNo)
        </div>

        <div class="btn-block">
            <input type="submit" value="Update Job" class="myButton" />
        </div>

    </fieldset>
}

@if (TempData["message"] != null)
{
    <p>@Html.Encode(TempData["message"])</p>
}

<style>
    .myButton {
        -moz-box-shadow: inset 0px 1px 3px 0px #91b8b3;
        -webkit-box-shadow: inset 0px 1px 3px 0px #91b8b3;
        box-shadow: inset 0px 1px 3px 0px #91b8b3;
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #768d87), color-stop(1, #6c7c7c));
        background: -moz-linear-gradient(top, #768d87 5%, #6c7c7c 100%);
        background: -webkit-linear-gradient(top, #768d87 5%, #6c7c7c 100%);
        background: -o-linear-gradient(top, #768d87 5%, #6c7c7c 100%);
        background: -ms-linear-gradient(top, #768d87 5%, #6c7c7c 100%);
        background: linear-gradient(to bottom, #768d87 5%, #6c7c7c 100%);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#768d87', endColorstr='#6c7c7c',GradientType=0);
        background-color: #768d87;
        -moz-border-radius: 5px;
        -webkit-border-radius: 5px;
        border-radius: 5px;
        border: 1px solid #566963;
        display: inline-block;
        cursor: pointer;
        color: #ffffff;
        font-family: Arial;
        font-size: 15px;
        font-weight: bold;
        padding: 11px 23px;
        text-decoration: none;
        text-shadow: 0px -1px 0px #2b665e;
    }

        .myButton:hover {
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #6c7c7c), color-stop(1, #768d87));
            background: -moz-linear-gradient(top, #6c7c7c 5%, #768d87 100%);
            background: -webkit-linear-gradient(top, #6c7c7c 5%, #768d87 100%);
            background: -o-linear-gradient(top, #6c7c7c 5%, #768d87 100%);
            background: -ms-linear-gradient(top, #6c7c7c 5%, #768d87 100%);
            background: linear-gradient(to bottom, #6c7c7c 5%, #768d87 100%);
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#6c7c7c', endColorstr='#768d87',GradientType=0);
            background-color: #6c7c7c;
        }

        .myButton:active {
            position: relative;
            top: 1px;
        }
</style>
